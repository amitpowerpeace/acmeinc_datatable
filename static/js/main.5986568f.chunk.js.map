{"version":3,"sources":["store/redux/actionTypes.js","store/redux/reducer.js","store/redux/index.js","store/redux/actionCreators.js","components/shared/CheckBox.js","components/shared/ProductTable.js","components/ProductSearch.js","components/ProductCard.js","container/ProductListContainer.js","App.js","serviceWorker.js","index.js"],"names":["FETCHING","concat","SUCCESS","ERROR","initialState","status","response","reducer","state","arguments","length","undefined","_ref","type","exception","Object","objectSpread2","map","item","index","productInStock","id","title","url","instock","inventory","vendor","useApiRequest","endpoint","_ref$method","method","_ref$params","params","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useCallback","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","fetch","sent","json","then","t0","stop","CheckBox","props","react_default","createElement","assign","ProductTable","_useState","useState","_useState2","sortBy","setSortBy","_useState3","_useState4","sortDirection","setSortDirection","_useState5","productTableData","_useState6","sortedList","setSortedList","_useState7","_useState8","checked","setChecked","sort","_ref2","newList","_","SortDirection","DESC","reverse","sortList","_cellRenderer","dataKey","rowIndex","Fragment","style","display","justifyContent","alignItems","color","width","marginRight","alt","src","marginLeft","role","onChangeHeaderCheckbox","data","target","row","className","es","_ref3","height","isScrolling","onChildScroll","scrollTop","autoHeight","onScroll","headerHeight","onRowClick","e","rowData","console","log","handleRowSelect","rowHeight","rowCount","Number","rowGetter","_ref4","disableSort","headerRenderer","shared_CheckBox","indeterminate","String","onChange","cellRenderer","_ref5","includes","newRow","old","filter","toConsumableArray","onChangeRowCheckbox","label","_ref6","_ref7","_ref8","_ref9","_ref10","ProductSearch","value","placeholder","fontSize","ProductCard","productListData","components_ProductSearch","shared_ProductTable","ProductListContainer","_useApiRequest","_useApiRequest2","_useApiRequest2$","makeRequest","onClick","components_ProductCard","App","container_ProductListContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5986568f.chunk.js","sourcesContent":["const prefix = 'redux/';\r\n\r\nexport const FETCHING = `${prefix}FETCHING`;\r\nexport const SUCCESS = `${prefix}SUCCESS`;\r\nexport const ERROR = `${prefix}ERROR`;\r\n","import { FETCHING, SUCCESS, ERROR } from \"./actionTypes\";\r\n\r\nexport const initialState = {\r\n  status: null,\r\n  response: null,\r\n};\r\n\r\nconst reducer = (state = initialState, { type, response, exception } = {}) => {\r\n  switch (type) {\r\n    case FETCHING:\r\n      return { ...initialState, status: FETCHING };\r\n    case SUCCESS:\r\n      response =\r\n        response &&\r\n        response.map((item, index) => {\r\n          let productInStock = 0;\r\n          if (index === 0) {\r\n            productInStock = \"N/A\";\r\n          } else if (index === 2) {\r\n            productInStock = -1;\r\n          } else {\r\n            productInStock = 25;\r\n          }\r\n          return {\r\n            id: item.id,\r\n            title: item.title,\r\n            url: item.url,\r\n            instock: productInStock,\r\n            inventory: \"In Stock\",\r\n            type: \"Gift Card\",\r\n            vendor: \"Fullfil test store\",\r\n          };\r\n        });\r\n      return { ...state, status: SUCCESS, response };\r\n    case ERROR:\r\n      return { ...state, status: ERROR, response };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { useReducer, useCallback } from \"react\";\r\nimport reducer, { initialState } from \"./reducer\";\r\nimport { fetching, success, error } from \"./actionCreators\";\r\n\r\nconst useApiRequest = (endpoint, { method = \"get\", params = {} } = {}) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const makeRequest = useCallback(async () => {\r\n    dispatch(fetching());\r\n    try {\r\n      const res = await fetch(endpoint, params, {\r\n        method: `${method}`\r\n      });\r\n      res && res.json().then((res) => dispatch(success(res)));\r\n    } catch (e) {\r\n      dispatch(error(e));\r\n    }\r\n  }, [endpoint, method, params]);\r\n\r\n  return [state, makeRequest];\r\n};\r\n\r\nexport default useApiRequest;\r\n","import { FETCHING, SUCCESS, ERROR } from \"./actionTypes\";\r\n\r\nexport const fetching = () => ({ type: FETCHING });\r\nexport const success = response => ({ type: SUCCESS, response });\r\nexport const error = response => ({ type: ERROR, response });\r\n","import React from \"react\";\r\n\r\n\r\nconst CheckBox = props => {\r\n  return (\r\n        <input type=\"checkbox\" {...props} />\r\n  );\r\n};\r\nexport default CheckBox;\r\n","import React, { useState} from \"react\";\r\nimport {\r\n  Column,\r\n  Table,\r\n  SortDirection,\r\n  WindowScroller,\r\n} from \"react-virtualized\";\r\nimport \"react-virtualized/styles.css\";\r\nimport _ from \"lodash\";\r\nimport CheckBox from \"./CheckBox\";\r\nconst ProductTable = (props) => {\r\n  const [sortBy, setSortBy] = useState(\"title\");\r\n  const [sortDirection, setSortDirection] = useState(\"ASC\");\r\n\r\n  const [sortedList, setSortedList] = useState(\r\n    props.productTableData && props.productTableData\r\n  );\r\n\r\n  const [checked, setChecked] = useState([]);\r\n\r\n  const sortList = ({ sortBy, sortDirection }) => {\r\n    const newList = _.sortBy(sortedList, [sortBy]);\r\n    if (sortDirection === SortDirection.DESC) {\r\n      newList.reverse();\r\n    }\r\n    return newList;\r\n  };\r\n\r\n  // eslint-disable-next-line no-shadow\r\n  const sort = ({ sortBy, sortDirection }) => {\r\n    setSortBy(sortBy);\r\n    setSortDirection(sortDirection);\r\n    setSortedList(sortList({ sortBy, sortDirection }));\r\n  };\r\n\r\n  const _cellRenderer = (dataKey, rowIndex) => {\r\n    if (dataKey === \"title\") {\r\n      return (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: \"inline-flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              color: \"#66b3ff\",\r\n            }}\r\n            index={rowIndex}\r\n          >\r\n            <img\r\n              style={{ width: \"30px\", marginRight: \"10px\" }}\r\n              alt=\"url\"\r\n              src={sortedList && sortedList[rowIndex][\"url\"]}\r\n            />\r\n            {sortedList && sortedList[rowIndex][dataKey]}\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (dataKey === \"inventory\") {\r\n      return (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: \"inline-flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n            index={rowIndex}\r\n          >\r\n            <span\r\n              style={\r\n                sortedList && sortedList[rowIndex][\"instock\"] === -1\r\n                  ? { color: \"#ff9933 \" }\r\n                  : {}\r\n              }\r\n            >\r\n              {\" \"}\r\n              {sortedList && sortedList[rowIndex][\"instock\"]}\r\n            </span>\r\n            <span style={{ marginLeft: \"5px\" }}>\r\n              {sortedList && sortedList[rowIndex][dataKey]}\r\n            </span>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div\r\n            index={rowIndex}\r\n            role=\"gridcell\"\r\n            style={dataKey === \"status\" ? { color: \"green\" } : {}}\r\n          >\r\n            {sortedList && sortedList[rowIndex][dataKey]}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChangeHeaderCheckbox = (data) => {\r\n    const { checked } = data.target;\r\n    if (checked) {\r\n      setChecked(sortedList && sortedList.map((row) => row.id));\r\n    } else {\r\n      setChecked([]);\r\n    }\r\n  };\r\n\r\n  const onChangeRowCheckbox = (data, index) => {\r\n    const newRow = sortedList && sortedList[index].id;\r\n    checked.includes(newRow)\r\n      ? setChecked((old) => old.filter((row) => row !== newRow))\r\n      : setChecked((old) => [...old, newRow]);\r\n  };\r\n\r\n  const handleRowSelect = (e) => {\r\n    const { index, rowData } = e;\r\n    console.log(`${index} at the data ${rowData}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"productTableContainer\">\r\n      <WindowScroller>\r\n        {({ height, isScrolling, onChildScroll, scrollTop }) => (\r\n          <Table\r\n            autoHeight\r\n            width={1000}\r\n            height={height}\r\n            isScrolling={isScrolling}\r\n            onScroll={onChildScroll}\r\n            headerHeight={30}\r\n            onRowClick={(e) => handleRowSelect(e)}\r\n            rowHeight={50}\r\n            sort={sort}\r\n            sortBy={sortBy}\r\n            sortDirection={sortDirection}\r\n            rowCount={Number(\r\n              sortedList && sortedList.length > 0 && sortedList.length\r\n            )}\r\n            scrollTop={scrollTop}\r\n            rowGetter={({ index }) => sortedList && sortedList[index]}\r\n          >\r\n            <Column\r\n              disableSort\r\n              dataKey=\"checkbox\"\r\n              width={50}\r\n              headerRenderer={() => (\r\n                <CheckBox\r\n                  checked={checked.length === sortedList.length}\r\n                  indeterminate={String(\r\n                    checked.length > 0 &&\r\n                      checked.length < sortedList &&\r\n                      sortedList.length\r\n                  )}\r\n                  onChange={onChangeHeaderCheckbox}\r\n                />\r\n              )}\r\n              cellRenderer={({ rowIndex }) => (\r\n                <CheckBox\r\n                  checked={\r\n                    checked.includes(sortedList && sortedList[rowIndex].id) ===\r\n                    true\r\n                  }\r\n                  onChange={(e) => onChangeRowCheckbox(e, rowIndex)}\r\n                  index={rowIndex}\r\n                />\r\n              )}\r\n            />\r\n            <Column\r\n              dataKey=\"id\"\r\n              label=\"ID\"\r\n              width={50}\r\n              cellRenderer={({ dataKey, rowIndex }) =>\r\n                _cellRenderer(dataKey, rowIndex)\r\n              }\r\n            />\r\n            <Column\r\n              dataKey=\"title\"\r\n              label=\"Product\"\r\n              width={400}\r\n              cellRenderer={({ dataKey, rowIndex }) =>\r\n                _cellRenderer(dataKey, rowIndex)\r\n              }\r\n            />\r\n            <Column\r\n              dataKey=\"inventory\"\r\n              label=\"Inventory\"\r\n              width={200}\r\n              cellRenderer={({ dataKey, rowIndex }) =>\r\n                _cellRenderer(dataKey, rowIndex)\r\n              }\r\n            />\r\n            <Column\r\n              dataKey=\"type\"\r\n              label=\"Type\"\r\n              width={200}\r\n              cellRenderer={({ dataKey, rowIndex }) =>\r\n                _cellRenderer(dataKey, rowIndex)\r\n              }\r\n            />\r\n            <Column\r\n              dataKey=\"vendor\"\r\n              label=\"Vendor\"\r\n              width={100}\r\n              style={{ justifyContent: \"space-evenly\" }}\r\n              cellRenderer={({ dataKey, rowIndex }) =>\r\n                _cellRenderer(dataKey, rowIndex)\r\n              }\r\n            />\r\n          </Table>\r\n        )}\r\n      </WindowScroller>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n","import React from \"react\";\r\n\r\nconst ProductSearch = (props) => {\r\n  return (\r\n    <div className=\"searchContainer\">\r\n      <select className=\"productFilter\" id=\"filterProduct\">\r\n        <option value=\"filter\">Filter</option>\r\n      </select>\r\n\r\n      <input type=\"text\" className=\"searchTerm\" placeholder=\"Search Products\" />\r\n      <i className=\"fa fa-search searchImg\" style={{ fontSize: \"12px\" }}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductSearch;\r\n","import React from \"react\";\r\nimport ProductTable from './shared/ProductTable'\r\nimport ProductSearch from './ProductSearch'\r\nconst ProductCard = (props) => {\r\n  const productListData = props.productListData;\r\n  return (\r\n    <>\r\n      <div className=\"productCardWrapper\">\r\n        <ProductSearch/>\r\n        <p style={{fontSize:'small'}}>{productListData && productListData.length} Items count</p>\r\n        <ProductTable productTableData={productListData}/>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ProductCard;\r\n","import React from \"react\";\r\nimport { FETCHING, SUCCESS, ERROR } from \"../store/redux/actionTypes\";\r\nimport useApiRequest from \"../store/redux\";\r\n\r\nimport ProductCard from \"../components/ProductCard\";\r\n\r\nconst ProductListContainer = (props) => {\r\n  const API = \"https://jsonplaceholder.typicode.com/photos\";\r\n\r\n  const [{ status, response }, makeRequest] = useApiRequest(API, {\r\n    method: \"get\",\r\n  });\r\n\r\n  //The makePorductRequest which will be requesting 50000 mock data.just delete status === SUCCESS and replace responnse with arr\r\n  let arr = [];\r\n  const makeProductRequest = () => {\r\n    for (var i = 0; i < 50000; i++) {\r\n      let obj = {};\r\n      obj = {\r\n        id: i,\r\n        title: \"reprehenderit est deserunt velit ipsam\",\r\n        url: \"https://via.placeholder.com/600/771796\",\r\n        instock: 25,\r\n        inventory: \"In Stock\",\r\n        type: \"Gift Card\",\r\n        vendor: \"Fullfil test store\",\r\n      };\r\n      arr.push(obj);\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  return (\r\n    <div className=\"productListContainer\">\r\n      <button onClick={makeRequest}>Get Prodcuts!</button>\r\n\r\n      {status === FETCHING && (\r\n        <div>\r\n          <p style={{ fontSize: \"small\" }}>Fetching Products...</p>\r\n        </div>\r\n      )}\r\n\r\n      {status === SUCCESS && (\r\n        <>\r\n          <hr />\r\n          <ProductCard productListData={response} />\r\n        </>\r\n      )}\r\n\r\n      {status === ERROR && <div>{\"Response Error\"}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListContainer;\r\n","import React from \"react\";\nimport ProductListContainer from './container/ProductListContainer'\n\nconst App = props => {\n  return (\n    <div className=\"container\">\n      <ProductListContainer/>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}